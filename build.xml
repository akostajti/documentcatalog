<?xml version="1.0"?>
<project name="docca" xmlns:ivy="antlib:org.apache.ivy.ant" default="compile" basedir="./DocumentCatalog">
	<!-- defining the emma task -->
	<property name="staticlib.dir" value="${basedir}/staticLib" />
	<property name="out.instr.dir" value="${basedir}/outinstr" />

	<path id="static.cp">  
		<fileset dir="${basedir}/staticLib" includes="**/*.jar"/>
	</path> 

	<path id="compile.cp">  
		<fileset dir="${basedir}/lib" includes="*.jar"/>
		<fileset dir="${basedir}/staticLib" includes="**/*.jar"/>
	</path>

	<taskdef resource="emma_ant.properties" classpathref="static.cp" />

	<property name="coverage.dir" value="${basedir}/coverage" />

	<!-- define the ivy task -->
	<taskdef name="ivy-retrieve" classname="org.apache.ivy.ant.IvyRetrieve" classpathref="static.cp"/>

	<!-- define the proerties and the testng task -->
	<path id="test.cp">  
		<fileset dir="${basedir}/lib" includes="**/*.jar"/>
		<fileset dir="${basedir}/staticLib" includes="**/*.jar"/>
		<fileset dir="${out.instr.dir}"/>
	</path> 
	<taskdef resource="testngtasks" classpathref="static.cp"/>

    <target name="clean" description="remove intermediate files">
        <delete dir="${basedir}/build/classes"/>
		<delete dir="${basedir}/testreport"/>
		<delete dir="${basedir}/coverage"/>
		<delete dir="${basedir}/outinstr"/>
    </target>
    <target name="compile" description="compile the Java source code to class files" depends="clean, retrieve">
        <mkdir dir="${basedir}/build/classes"/>
        <javac srcdir="." destdir="${basedir}/build/classes" classpathref="compile.cp"/>
    </target>
	<target name="build" depends="compile">
		<copy todir="${basedir}/build/classes" flatten="false" overwrite="true" >
			<fileset dir="${basedir}/testResources" includes="**/*" />
		</copy>
	</target>
	<target name="test" depends="build, emma">

		<emma enabled="${emma.enabled}" verbosity="verbose">
			<instr instrpath="${basedir}/build/classes" destdir="${out.instr.dir}" mode="copy" metadatafile="${coverage.dir}/metadata.emma">
				<filter excludes="*Test*"/>
			</instr>
		</emma>

	    <mkdir dir="${basedir}/testreport"/>
		<testng classpathref="test.cp"
				outputDir="${basedir}/testreport"
				haltOnFailure="true" verbose="2">
			<classpath location="${basedir}/testResources"/>
			<classpath location="${out.instr.dir}"/>
			<classpath location="${basedir}/build/classes"/>
			<classfileset dir="${out.instr.dir}" includes="**/*.class" />

			<jvmarg value="-Demma.coverage.out.file=${coverage.dir}/coverage.emma" />
			<jvmarg value="-Demma.coverage.out.merge=false" />
		</testng>

		<emma enabled="${emma.enabled}">
			<report sourcepath="${basedir}/src" sort="+block,+name,+method,+class" metrics="method:70,block:80,line:80,class:90">
				<fileset dir="${coverage.dir}">
					<include name="*.emma" />
				</fileset>

				<txt outfile="${coverage.dir}/coverage.txt" depth="package" columns="class,method,block,line,name" />
			</report>
		</emma>
	</target>

	<target name="emma" description="turns on EMMA instrumentation/reporting" >
		<property name="emma.enabled" value="true" />
		<!-- EMMA instr class output directory: -->
		<property name="out.instr.dir" value="${basedir}/outinstr" />
		<mkdir dir="${out.instr.dir}" />
	</target>

	<target name="retrieve" description="--> retrieve dependencies with ivy">
        <ivy-retrieve />
    </target>
 </project>